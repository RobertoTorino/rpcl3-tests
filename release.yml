name: CI Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up UTF-8 and PowerShell output
        shell: pwsh
        run: |
          $OutputEncoding = [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          Write-Host "Using PowerShell version: $($PSVersionTable.PSVersion)"

      - name: Debug - List files
        run: |
          dir
          dir ahk
          dir ahk\Compiler
          dir upx

      - name: Build EXE, move to root, UPX and create ZIP
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'

          $ahkCompiler = "ahk\Compiler\Ahk2Exe.exe"
          $baseFile    = "ahk\Compiler\Unicode 32-bit.bin"
          $input       = "rpcl3pc.ahk"
          $output      = "rpcl3pc.exe"
          $icon        = "rpcl3_media\rpcl3.ico"
          $zipName     = "rpcl3_release.zip"
          $versionTxt  = "version.txt"
          $versionDat  = "version.dat"
          $extraAssets = @(
            "README.txt",
            "pc.ini",
            "LICENSE",
            $versionTxt,
            $versionDat
          )

          foreach ($file in @($ahkCompiler, $baseFile, $input)) {
            if (!(Test-Path $file)) {
              Write-Error "Required file not found: $file"
              exit 1
            }
            Write-Host ":: Found: $file"
          }

          # --- Compile ---
          & $ahkCompiler /in $input /out $output /icon $icon /base $baseFile

          # --- Always move EXE to $env:GITHUB_WORKSPACE ---
          $repoRoot = $env:GITHUB_WORKSPACE
          $compiledExe = Join-Path $PWD $output
          $finalExe    = Join-Path $repoRoot $output
          if ((Test-Path $compiledExe) -and ($compiledExe -ne $finalExe)) {
            Move-Item $compiledExe $finalExe -Force
            Write-Host ":: Moved EXE to $finalExe"
          }
          
          $test = $finalExe
          Write-Host "Test-Path on: $test"
          if (!(Test-Path $test)) {
            # Try lowercase
            $test2 = $test.ToLower()
            Write-Host "Test-Path lower: $test2 : $(Test-Path $test2)"
            # Try direct literal
            Write-Host "Test-Path on literal: D:\a\rpcl3-process-control\rpcl3-process-control\rpcl3pc.exe : $(Test-Path 'D:\a\rpcl3-process-control\rpcl3-process-control\rpcl3pc.exe')"
            # List the folder
            dir (Split-Path $test)
          }
          
          if (!(Test-Path $finalExe)) {
            Write-Error ":: Build failed â€” output exe still not found at $finalExe"
            exit 1
          }

          # --- UPX ---
          if (Test-Path "upx\upx.exe") {
            & "upx\upx.exe" --best --lzma $finalExe
          }

          # --- ZIP ---
          $toZip = @($finalExe)
          foreach ($asset in $extraAssets) {
            $assetAbs = Join-Path $repoRoot $asset
            if (Test-Path $assetAbs) {
              $toZip += $assetAbs
              Write-Host ":: Added to zip: $assetAbs"
            } else {
              Write-Warning "Not adding (missing): $assetAbs"
            }
          }
          $zipPath = Join-Path $repoRoot $zipName
          Compress-Archive -Path $toZip -DestinationPath $zipPath -Force

      - name: List final artifacts
        run: dir ${{ github.workspace }}

      - name: Upload EXE and ZIP to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            rpcl3pc.exe
            rpcl3_release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
