name: CI Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up UTF-8 and PowerShell output
        shell: pwsh
        run: |
          $OutputEncoding = [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          Write-Host "Using PowerShell version: $($PSVersionTable.PSVersion)"

      - name: Debug - List files
        run: |
          dir
          dir ahk
          dir ahk\Compiler
          dir upx

      - name: Build EXE, move to root, UPX and create ZIP
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'

          $ahkCompiler = "ahk\Compiler\Ahk2Exe.exe"
          $baseFile    = "ahk\Compiler\Unicode 32-bit.bin"
          $input       = "rpcl3pc.ahk"
          $output      = "rpcl3pc.exe"
          $icon        = "rpcl3_media\rpcl3.ico"
          $zipName     = "rpcl3_release.zip"
          $versionTxt  = "version.txt"
          $versionDat  = "version.dat"
          $extraAssets = @(
            "README.txt",
            "pc.ini",
            "LICENSE",
            $versionTxt,
            $versionDat
          )

          foreach ($file in @($ahkCompiler, $baseFile, $input)) {
            if (!(Test-Path $file)) {
              Write-Error "Required file not found: $file"
              exit 1
            }
            Write-Host ":: Found: $file"
          }

          # --- Compile: capture stdout and stderr for diagnostic ---
          $stdout = "$PWD\ahk2exe_stdout.txt"
          $stderr = "$PWD\ahk2exe_stderr.txt"
          if (Test-Path $stdout) { Remove-Item $stdout }
          if (Test-Path $stderr) { Remove-Item $stderr }

          Write-Host ":: Running Ahk2Exe with icon..."
          $proc = Start-Process -FilePath $ahkCompiler -ArgumentList "/in", $input, "/out", $output, "/icon", $icon, "/base", $baseFile `
            -NoNewWindow -Wait -PassThru `
            -RedirectStandardOutput $stdout `
            -RedirectStandardError $stderr

          Write-Host ":: Ahk2Exe ExitCode: $($proc.ExitCode)"
          Write-Host "===== Ahk2Exe stdout ====="
          if (Test-Path $stdout) { Get-Content $stdout }
          Write-Host "===== Ahk2Exe stderr ====="
          if (Test-Path $stderr) { Get-Content $stderr }

          $repoRoot = $env:GITHUB_WORKSPACE
          $compiledExe = Join-Path $PWD $output
          $finalExe    = Join-Path $repoRoot $output

          # Try moving/copying compiled EXE to $GITHUB_WORKSPACE
          if ((Test-Path $compiledExe) -and ($compiledExe -ne $finalExe)) {
            Move-Item $compiledExe $finalExe -Force
            Write-Host ":: Moved EXE to $finalExe"
          }

          # If EXE is still missing at this stage, try compiling without icon as a diagnostic
          if (!(Test-Path $finalExe)) {
            Write-Host ":: EXE missing, retrying Ahk2Exe WITHOUT icon..."
            $proc2 = Start-Process -FilePath $ahkCompiler -ArgumentList "/in", $input, "/out", $output, "/base", $baseFile `
              -NoNewWindow -Wait -PassThru `
              -RedirectStandardOutput $stdout `
              -RedirectStandardError $stderr
            if ((Test-Path $compiledExe) -and ($compiledExe -ne $finalExe)) {
              Move-Item $compiledExe $finalExe -Force
              Write-Host ":: Moved EXE to $finalExe after icon-less build"
            }
            # Print logs again
            Write-Host ":: Second try Ahk2Exe ExitCode: $($proc2.ExitCode)"
            Write-Host "===== Ahk2Exe stdout (iconless) ====="
            if (Test-Path $stdout) { Get-Content $stdout }
            Write-Host "===== Ahk2Exe stderr (iconless) ====="
            if (Test-Path $stderr) { Get-Content $stderr }
          }

          # Final diagnostics if still missing
          if (!(Test-Path $finalExe)) {
            Write-Host "== DIR \$PWD =="
            Get-ChildItem $PWD -Recurse
            Write-Host "== DIR \$repoRoot =="
            Get-ChildItem $repoRoot
            Write-Error ":: Build failed â€” output exe still not found at $finalExe"
            exit 1
          }

          # --- UPX ---
          if (Test-Path "upx\upx.exe") {
            & "upx\upx.exe" --best --lzma $finalExe
          }

          # --- ZIP ---
          $toZip = @($finalExe)
          foreach ($asset in $extraAssets) {
            $assetAbs = Join-Path $repoRoot $asset
            if (Test-Path $assetAbs) {
              $toZip += $assetAbs
              Write-Host ":: Added to zip: $assetAbs"
            } else {
              Write-Warning "Not adding (missing): $assetAbs"
            }
          }
          $zipPath = Join-Path $repoRoot $zipName
          Compress-Archive -Path $toZip -DestinationPath $zipPath -Force

      - name: List final artifacts
        run: dir ${{ github.workspace }}

      - name: Upload EXE and ZIP to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            rpcl3pc.exe
            rpcl3_release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
