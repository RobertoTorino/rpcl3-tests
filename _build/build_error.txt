# === ZIP CONTENTS ===
Write-Host "üì¶ Creating ZIP: $zipName"

# Build file list more carefully
$allFiles = @()

# Add the main executable
if (Test-Path $finalExe) {
    $allFiles += $finalExe
    Write-Host "Added: $finalExe"
} else {
    Write-Host "Warning: $finalExe not found!" -ForegroundColor Yellow
}

# Add extra assets (check each one)
foreach ($asset in $extraAssets) {
    if (Test-Path $asset) {
        $allFiles += $asset
        Write-Host "Added: $asset"
    } else {
        Write-Host "Warning: $asset not found!" -ForegroundColor Yellow
    }
}

# Add media folder files
if (Test-Path $mediaFolder) {
    $mediaFiles = Get-ChildItem -Path $mediaFolder -File | ForEach-Object { $_.FullName }
    if ($mediaFiles) {
        $allFiles += $mediaFiles
        Write-Host "Added $($mediaFiles.Count) files from $mediaFolder"
    }
} else {
    Write-Host "Warning: $mediaFolder not found!" -ForegroundColor Yellow
}

# Add tools folder files
if (Test-Path $toolsFolder) {
    $toolsFiles = Get-ChildItem -Path $toolsFolder -Recurse | Where-Object { !$_.PSIsContainer } | ForEach-Object { $_.FullName }
    if ($toolsFiles) {
        $allFiles += $toolsFiles
        Write-Host "Added $($toolsFiles.Count) files from $toolsFolder"
    }
} else {
    Write-Host "Warning: $toolsFolder not found!" -ForegroundColor Yellow
}

# Add placeholder files for empty folders
foreach ($folder in $emptyFolders) {
    if (-not (Test-Path $folder)) {
        New-Item -ItemType Directory -Path $folder -Force | Out-Null
    }
    $placeholderPath = "$folder\.placeholder"
    New-Item -Path $placeholderPath -ItemType File -Force | Out-Null
    $allFiles += $placeholderPath
    Write-Host "Added placeholder: $placeholderPath"
}

# Remove any null/empty entries
$allFiles = $allFiles | Where-Object { $_ -and (Test-Path $_) }

Write-Host "Total files to zip: $($allFiles.Count)"

if ($allFiles.Count -gt 0) {
    try {
        Compress-Archive -Path $allFiles -DestinationPath $zipName -Force
        Write-Host "‚úÖ ZIP created successfully: $zipName" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå ZIP creation failed: $($_.Exception.Message)" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå No files to zip!" -ForegroundColor Red
}
